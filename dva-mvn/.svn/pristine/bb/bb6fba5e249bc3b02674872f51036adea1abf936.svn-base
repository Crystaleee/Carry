package edu.bupt.dmg.action;

import java.awt.image.BufferedImage;

import javax.imageio.ImageIO;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.code.kaptcha.Constants;
import com.google.code.kaptcha.impl.DefaultKaptcha;

import edu.bupt.dmg.commons.ResultMessage;
/**
 * 处理验证码的请求
 * 
 * Project Name: VisAna<br> 
 * File Name: KaptchaAction.java<br> 
 * Package Name: edu.bupt.dmg.action<br>       
 * Creator: @author Ruitong Chai & Bohao Wang<br>    
 * Create Time：2017年4月6日<br>
 * Version: @version 0.0.1
 */
@Controller
@RequestMapping("/kaptcha")
public class KaptchaAction {

	@Autowired
	DefaultKaptcha kaptchaProducer;

	/**
	 * 验证码的验证
	 * @param kaptcha 验证码
	 * @return ResultMessage 结果信息
	 * @throws Exception
	 */
	@RequestMapping(value = "/kaptchaValidate")
	public @ResponseBody ResultMessage kaptchaValidate(String kaptcha) throws Exception {
		Subject subject = SecurityUtils.getSubject();
		String kaptchaCode = (String) subject.getSession().getAttribute(Constants.KAPTCHA_SESSION_KEY);
		if (kaptcha.equals(kaptchaCode)) {
			return new ResultMessage(1);
		} else {
			return new ResultMessage(-5);
		}
	}

	/**
	 * 获取验证码图片
	 * @param request
	 * @param response
	 * @throws Exception
	 */
	@RequestMapping(value ="/getKaptcha",method = RequestMethod.GET)
	public void getKaptcha(HttpServletRequest request, HttpServletResponse response) throws Exception {
		response.setDateHeader("Expires", 0L);
		response.setHeader("Cache-Control", "no-store, no-cache, must-revalidate");
		response.addHeader("Cache-Control", "post-check=0, pre-check=0");
		response.setHeader("Pragma", "no-cache");
		response.setContentType("image/jpeg");

		String capText = this.kaptchaProducer.createText();
		String s1 = capText.substring(0, 1);
		String s2 = capText.substring(1, 2);
		int r = Integer.valueOf(s1).intValue() + Integer.valueOf(s2).intValue();

		request.getSession().setAttribute(Constants.KAPTCHA_SESSION_KEY, String.valueOf(r));
		BufferedImage bi = this.kaptchaProducer.createImage(s1 + "+" + s2 + "=?");
		ServletOutputStream out = response.getOutputStream();
		ImageIO.write(bi, "jpg", out);
		try {
			out.flush();
		} finally {
			out.close();
		}
	}

}
